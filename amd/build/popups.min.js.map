{"version":3,"file":"popups.min.js","sources":["../src/popups.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to initialise modal with listeners\n *\n * @module     format_popups/popups\n * @copyright  2021 Daniel Thies <dethies@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Ajax from 'core/ajax';\nimport config from 'core/config';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport notification from 'core/notification';\nimport templates from 'core/templates';\nimport loadChapter from 'format_popups/book';\nimport resize from 'format_popups/embed';\n\n/**\n * Initialize modal and listeners\n *\n * @param {int} contextid Course context id\n * @param {int} courseid Course id\n * @param {int} displaysection Single section to display\n */\nexport const init = (contextid, courseid, displaysection) => {\n    'use strict';\n\n    ModalFactory.create({\n        large: true,\n        title: 'title',\n        body: '<div id=\"format_popups_activity_content\"></div>'\n    }).then(function(modal) {\n        modal.contextid = contextid;\n        modal.courseid = courseid;\n        modal.displaysection = displaysection;\n        modal.modules = [];\n        modal.modulecount = document.querySelectorAll('.activity').length;\n        registerListeners.bind(modal)();\n\n        return Ajax.call([{\n            methodname: 'format_popups_get_available_mods',\n            args: {\n                contextid: modal.contextid\n            },\n            done: function(modules) {\n                this.modules = modules;\n            }.bind(modal),\n            fail: notification.exception\n        }]);\n    }).fail(notification.exception);\n};\n\n/**\n * Update activities on course page and optionally manual completion\n */\nfunction updatePage() {\n    'use strict';\n\n    Fragment.loadFragment(\n        'format_popups',\n        'page',\n        this.contextid,\n        {\n            displaysection: this.displaysection\n        }\n    ).then(function(html, js) {\n        if (!html.length) {\n            return;\n        }\n        templates.replaceNodeContents('div.course-content', html, js);\n        document.querySelectorAll('form#sectionmenu select').forEach(function(selector) {\n            let form = selector.closest('form'),\n                html;\n            selector.removeAttribute('id');\n            html = form.innerHTML;\n            templates.replaceNodeContents(form, html, '');\n        });\n        return;\n    }).fail(notification.exception);\n\n    Ajax.call([{\n        methodname: 'format_popups_get_available_mods',\n        args: {\n            contextid: this.contextid\n        },\n        done: function(modules) {\n            this.modules = modules;\n        }.bind(this),\n        fail: notification.exception\n    }]);\n}\n\n/**\n * Register listeners for modal\n *\n */\nfunction registerListeners() {\n    'use strict';\n\n    // Open Modal when view is clicked.\n    document.querySelector('body').addEventListener('click', function(e) {\n        let anchor = e.target.closest('a');\n        if (anchor && anchor.getAttribute('href')\n            && !anchor.getAttribute('onclick')\n            && anchor.getAttribute('href').match('http')\n            && anchor.closest('div.course-content, #format_popups_activity_content, #courseindex-content')\n        ) {\n            let url = new URL(anchor.getAttribute('href')),\n                id = url.searchParams.get('id');\n            this.modules.forEach(function(module) {\n                if ((id == module.id &&\n                        !url.searchParams.get('downloadown') &&\n                        config.wwwroot + '/mod/' + module.modname + '/view.php' === url.origin + url.pathname) ||\n                    (url.searchParams.get('a') == module.instance &&\n                        config.wwwroot + '/mod/' + module.modname + '/report.php' === url.origin + url.pathname\n                            && module.modname === 'h5pactivity')\n                ) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        this.setTitle(module.title);\n                        Fragment.loadFragment(\n                            'format_popups',\n                            'mod',\n                            module.contextid,\n                            {\n                                jsondata: JSON.stringify(url.searchParams.toString()),\n                                modname: module.modname,\n                                path: url.pathname\n                            }\n                        ).then(\n                            templates.replaceNodeContents.bind(templates, '#format_popups_activity_content')\n                        ).fail(notification.exception);\n                        this.show();\n                }\n            }.bind(this));\n        }\n    }.bind(this));\n\n    // Update the page so new completion and conditions show.\n    this.getRoot().on(ModalEvents.hidden, updatePage.bind(this));\n\n    // Add event listener for file upload complete.\n    document.addEventListener('focusin', function() {\n        'use strict';\n\n        // Check whether number of modules changed. if so we need to update.\n        if (this.modulecount === document.querySelectorAll('.activity').length) {\n            return;\n        }\n        this.modulecount = document.querySelectorAll('.activity').length;\n\n        Ajax.call([{\n            methodname: 'format_popups_get_available_mods',\n            args: {\n                contextid: this.contextid\n            },\n            done: function(modules) {\n                this.modules = modules;\n            }.bind(this),\n            fail: notification.exception\n        }]);\n    }.bind(this));\n\n    // Listen for manual completion update.\n    document.querySelector('div.course-content').addEventListener('submit', handleCompletion.bind(this));\n\n    // Remove module listener.\n    this.getRoot().on(ModalEvents.hidden, function() {\n        let content = document.querySelector('#format_popups_activity_content');\n        if (content) {\n            content.removeEventListener('click', loadChapter);\n            content.removeEventListener('resize', resize);\n        }\n    });\n\n    // Navigation links within the course page.\n    document.querySelectorAll('#page-navbar, #nav-drawer, div.course-content').forEach(function(container) {\n        container.addEventListener('click', function(e) {\n            let anchor = e.target.closest('a') || e.target;\n            if (anchor && anchor.getAttribute('href')) {\n                let href = anchor.getAttribute('href');\n                if (href.search(config.wwwroot + '/course/view.php') === 0) {\n                    let url = new URL(href),\n                        params = url.searchParams;\n                    if (!params.has('sesskey') && !href.includes('#') && params.get('id') === this.courseid) {\n                        this.displaysection = params.get('section');\n                        updatePage.bind(this)();\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n            }\n        }.bind(this));\n    }.bind(this));\n\n    // Handle form navigation on the course page.\n    document.querySelector('div.course-content').addEventListener('change', function(e) {\n        let form = e.target.closest('form#sectionmenu');\n        if (form) {\n            let formdata = new FormData(form),\n                url = new URL(config.wwwroot + formdata.get('jump')),\n                params = url.searchParams;\n            if (params.get('id') === this.courseid) {\n                this.displaysection = params.get('section');\n                updatePage.bind(this)();\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }.bind(this));\n\n    // Remove original form listeners.\n    document.querySelectorAll('form#sectionmenu select, form.togglecompletion').forEach(function(selector) {\n        let form = selector.closest('form'),\n            html;\n        selector.removeAttribute('id');\n        html = form.innerHTML;\n        templates.replaceNodeContents(form, html, '');\n    });\n\n    // If window looses focus and and modal is empty, then close the modal. This\n    // happens when a SCORM package is opened in external window.\n    window.addEventListener('blur', function() {\n        if (\n            document.getElementById('format_popups_activity_content') &&\n            window.getComputedStyle(document.getElementById('format_popups_activity_content')).height == '0px'\n        ) {\n           this.hide();\n        }\n    }.bind(this));\n\n    this.getRoot().on(ModalEvents.hidden, templates.replaceNodeContents.bind(\n        templates,\n        '#format_popups_activity_content',\n        '<div style=\"height: 275px;\"></div>',\n        ''\n    ));\n}\n\n/**\n * Submit form and load response\n *\n * @param {object} e event\n */\nfunction handleCompletion(e) {\n    'use strict';\n    let form = e.target.closest('form.togglecompletion');\n    if (form) {\n        let formdata = new FormData(form),\n            url = new URL(form.getAttribute('action')),\n            params = new URLSearchParams(formdata);\n\n        if (config.wwwroot + '/course/togglecompletion.php' === url.origin + url.pathname) {\n            let xhttp = new XMLHttpRequest(),\n                spinner = document.createElement('div');\n            e.preventDefault();\n            e.stopPropagation();\n            params.append('fromajax', 1);\n            spinner.setAttribute('class', 'ajaxworking');\n            form.appendChild(spinner);\n\n            // This is not the fasted. but best code reuse.  First complete ajax request\n            // for completion update ignoring result, then reload the page.\n            xhttp.onreadystatechange = function(modal) {\n                if (this.readyState == 4 && this.status == 200) {\n                    updatePage.bind(modal)();\n                }\n            }.bind(xhttp, this);\n            xhttp.open('POST', form.getAttribute('action'), true);\n            xhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            xhttp.send(params.toString());\n        }\n    }\n}\n"],"names":["updatePage","loadFragment","this","contextid","displaysection","then","html","js","length","replaceNodeContents","document","querySelectorAll","forEach","selector","form","closest","removeAttribute","innerHTML","fail","notification","exception","call","methodname","args","done","modules","bind","registerListeners","querySelector","addEventListener","e","anchor","target","getAttribute","match","url","URL","id","searchParams","get","module","config","wwwroot","modname","origin","pathname","instance","preventDefault","stopPropagation","setTitle","title","jsondata","JSON","stringify","toString","path","templates","show","getRoot","on","ModalEvents","hidden","modulecount","handleCompletion","content","removeEventListener","loadChapter","resize","container","href","search","params","has","includes","courseid","formdata","FormData","window","getElementById","getComputedStyle","height","hide","URLSearchParams","xhttp","XMLHttpRequest","spinner","createElement","append","setAttribute","appendChild","onreadystatechange","modal","readyState","status","open","setRequestHeader","send","create","large","body","Ajax"],"mappings":"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"}