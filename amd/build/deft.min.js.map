{"version":3,"file":"deft.min.js","sources":["../src/deft.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add Deft response bleck to update course page remotely\n *\n * @module     format_popups/deft\n * @copyright  2023 Daniel Thies <dethies@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from \"core/ajax\";\nimport {debounce} from 'core/utils';\nimport Log from \"core/log\";\nimport Notification from \"core/notification\";\nimport Popups from 'format_popups/popups';\nimport SocketBase from 'block_deft/socket';\n\n/**\n * Initialize modal and listeners\n *\n * @param {int} contextid Course context id\n * @param {int} courseid Course id\n * @param {int} displaysection Single section to display\n * @param {string} token Deft authentication\n * @param {int} throttle Throttle dely in ms\n */\nexport const init = (contextid, courseid, displaysection, token, throttle) => {\n    'use strict';\n\n    const socket = new Socket(contextid, token);\n    Popups.init(contextid, courseid, displaysection, 'format_popups');\n\n    socket.subscribe(\n        debounce(Popups.updatePage.bind(Popups), throttle)\n    );\n};\n\nclass Socket extends SocketBase {\n    /**\n     * Renew token\n     *\n     * @param {int} contextid Context id of block\n     */\n    renewToken(contextid) {\n        Ajax.call([{\n            methodname: 'format_popups_renew_token',\n            args: {contextid: contextid},\n            done: (replacement) => {\n                Log.debug('Reconnecting');\n                this.connect(contextid, replacement.token);\n            },\n            fail: Notification.exception\n        }]);\n    }\n}\n"],"names":["contextid","courseid","displaysection","token","throttle","socket","Socket","init","subscribe","Popups","updatePage","bind","SocketBase","renewToken","call","methodname","args","done","replacement","debug","connect","fail","Notification","exception"],"mappings":";;;;;;;0SAuCoB,CAACA,UAAWC,SAAUC,eAAgBC,MAAOC,kBAGvDC,OAAS,IAAIC,OAAON,UAAWG,uBAC9BI,KAAKP,UAAWC,SAAUC,eAAgB,iBAEjDG,OAAOG,WACH,mBAASC,gBAAOC,WAAWC,KAAKF,iBAASL,kBAI3CE,eAAeM,gBAMjBC,WAAWb,yBACFc,KAAK,CAAC,CACPC,WAAY,4BACZC,KAAM,CAAChB,UAAWA,WAClBiB,KAAOC,2BACCC,MAAM,qBACLC,QAAQpB,UAAWkB,YAAYf,QAExCkB,KAAMC,sBAAaC"}